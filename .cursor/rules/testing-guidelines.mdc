---
globs: tests/*.rs,src/**/*.rs
description: Testing guidelines and patterns for the BNF parser project
---

# Testing Guidelines

This project uses comprehensive testing with multiple approaches. Follow these
guidelines when writing or modifying tests.

## Test Organization

- **Integration Tests**: Located in [tests/](mdc:tests/) directory
- **Unit Tests**: Co-located with source code in `mod tests` blocks
- **Benchmarks**: Located in [benches/](mdc:benches/) directory
- **Examples**: Located in [examples/](mdc:examples/) directory

## Testing Tools

- **Insta**: Used for snapshot testing (see [tests/snapshots/](mdc:tests/snapshots/))
- **QuickCheck**: Used for property-based testing
- **Criterion**: Used for performance benchmarking
- **Divan**: Used for alternative benchmarking

## Test Patterns

### Grammar Parsing Tests

- Test BNF grammar parsing from text input
- Verify correct structure of parsed Grammar objects
- Test error handling for invalid grammars

### Generation Tests

- Test random sentence generation from grammars
- Verify generated sentences are valid according to grammar
- Test infinite loop detection in recursive grammars

### Input Parsing Tests

- Test parsing input strings against grammars using Earley algorithm
- Test ambiguous grammar handling
- Test parse tree generation and formatting

### Snapshot Testing

- Use Insta for regression testing of complex outputs
- Snapshots are stored in [tests/snapshots/](mdc:tests/snapshots/)
- Update snapshots when expected behavior changes

## Test Fixtures

- **BNF Files**: Located in [tests/fixtures/](mdc:tests/fixtures/)
- **Input Files**: Various BNF grammar examples for testing
- **Expected Outputs**: Snapshot files for regression testing

## Running Tests

- `cargo test`: Run all tests
- `cargo test --features tracing`: Run tests with tracing enabled
- `cargo bench`: Run benchmarks
- `cargo insta review`: Review and update snapshots

## Code Quality

- All tests must be in proper test modules (enforced by linting)
- No tests outside test modules
- Follow the strict linting rules defined in [Cargo.toml](mdc:Cargo.toml)
